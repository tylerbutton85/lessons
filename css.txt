Introduction
————

HTML	- Structure
CSS	- presentation 
JS	- Behaviour

CSS	- Presentational style that can be applied to all browsers, broken away from inline styles. Since HTML 4.0
	- CSS helped improve accessibly with styling for lots of different attributes. 
	- CSS3 has launched in browser features, flexbox, rounded corners etc.


Staying current		- MDN, Mozilla developer CSS reference. All standard selectors and details on each.
			- Web platform docs, helpful info about CSS topics.Various functions. (docs.webplatform.org)
			- W3C actually specifications. Web standards as they’re developed. 
			- caniuse.com shows browser support information, latest supports for functions. 

Inline vs Internal
————
	
User agent styles	- Browser defaults to make html presentable.
Author styles		- Inline, internal and external.

Inline			- directly inside element. Not best practice, used sparingly if at all. Difficult maintenance. 
Internal		- embedded in page, using style tags within head of page. Can create conflicts and duplicates. 
External		- Most efficient, one file changes style for whole website. Flexibility advantageous and it’s cached. 

Link tag		- Links styles to page. Comprises of at least 2 attributes; 
rel=“stylesheet”	- Specifies the relationship between the link of the pages.
href=“”			- href points to location of the file, includes path.
import statement	- makes CSS more modular, base, layout and typography… although can increase load time.


Selectors 
————

CSS rules		- Tell browsers how to render HTML elements, made of selector and declaration block. 
Selector		- Defines what is being targeted, where to apply the style. 
Declaration block	- Decorations that style the element we’re selector. Comprises of property and a value. 
Property		- part of element we want to change. 
Value			- how we want to change the property. 

*			- Universal selector, applies to every element and overrides everything else.
element selectors	- Used to select elements on the page.


ID selectors
————

Element can only have one ID and a page can only have one element with the same ID name. 

#idname			- pound symbol followed by ID name. 
name=“”			- Can be used to find elements with that id. 


Class selectors
————

Class can be use to classify and target more than one element, element can have multiple classes attached to it. 
A class and an ID can be applied to one element, but ID’s carry more ‘weight’ than a class selector. 

.classname		- only targets elements with matching class tag.



Descendant selectors
————

Target elements that are decedents of other elements, used for targeting lists. 

ul li {}		- adds specificity to descendants. 


Pseudo-Classes
————

Similar to classes, but aren’t explicitly written in source code. Can target elements dynamically based on interaction. 

a:link			- links that have not yet been visited. 

a:visited		- target visited links 
a:hover			- targets links that are hovered over
a:active		- applied when element has been activated by the user
a:focus			- only applied to interactive elements, when browser determine a user is ready to interact with. 
/* */			- comments for CSS that the browser does not interpret


Common data types
————

datatypes		- keywords, number, length, image, url. 
percentages		- measures relative to parents element
em			- font relative unit, calculated based on parent elements font size. (determined by body font size context)
rem 			- root em, only relative to root element of the page. (HTML element)


Colour
————

Colour values		- Hex, keyword, RGB value. 
#			- red, green and blue colour values. (0-9 / A-F)
rgb(,,);		- comma separated list of three rgb values.
rgba(,,,);		- comma separated list of four rgb values.


Text styles
————

text-align		- controls horizontal alignment of txt; 
text-transform		- changes the case of of text.
text-decoration		- sets the line decoration of elements. 
font-weight		- Sets how thick or thin the characters are displayed.


Font Properties
————

font-family		- Defines a typeface for our text.
font-style		- Allows italic or oblique faces to be selected within a font family.
web safe		- Fonts that all browsers have
font stack		- list of fallback fonts. 
font			- shorthand. (weight) (size)/(line-height) (font stack)”
line-height		- Increases or decreases the lines between text.


CSS Box model 
————

Describes the amount of space each element takes within a page. 

Every element has a display values, block and inline.

Block elements		- Form a separate block that takes full width based on parent element, creates new line before and after element. 
Inline elements		- Only take as much space as they need to, they stay inline with other elements.

content area		- inner most area, element that contains the content
padding			- gives content area breathing room between the border 
border			- outer most area of the box, like an outline
margin			- outside of box, this part separates it from other areas. 


Padding
————

padding			- length or a percentage value. 
padding shorthand	- top, right, bottom, left. (clockwise from top)



Borders
————

Borders inherit text colour if not specified. 

border-width		- sets width
border-style		- sets style
border-color		- sets colour
border shorthand	- shorthand for setting all property values in one place. 

margin shorthand	- shorthand for setting all property values in one place. 
negative margins	- Can use negative values using margins.
margin auto		- browser calculates equal margins.


Display values
————

Allow you to overwrite the default browser values. 

none			- hides 	
block			- stops displaying inline and takes full width
inline			- specifies inline
inline-block		- combination of block and inline. 


Width and Height 
————

By default, an element's width and height are as wide or as tall as the content it holds. But we're able to set our own dimensions with the width and height properties.

accept length units, percentages (relative to parents width)

box-sizing		- Alters the default CSS box model used to calculate widths and heights of elements.
max-width		- Sets the maximum width of an element, used for responsive images too. 
border box		- forces padding and margin into the total width of element instead of expanding it. 


Backgrounds: Colour and Images
————

In an HTML element, everything except the margin area is considered the background layer. And every element has a background layer that is transparent by default.

background-image	- defined with url(‘’) be sure to use ../ to make path from CSS relative to that of image.  
background-size		- can set using any length value or percentages. 
background-repeat	- Set to repeat by default, can repeat by Y and X… ‘no-repeat’ stops repeating. 
background-position	- Top left by default. take two values, X and Y. i.e ‘center top’


Floats
————

When an element is floated, the element is taken out of the normal flow of the page and placed along the left or right side of its container.

float:			- left / right… outside of container, either left or right. 


Lists 
————

Different ways we can use list properties to control the appearance of our ordered and un-ordered lists. List style displayed outside of content flow and are indented by default.

list-style-type		- sets the appearance of a list item
list-style-position	- sets the position of a list marker
list-style		- shorthand i.e ‘list-style: square inside url("sqpurple.gif”);’


Text Shadows
————

text-shadow:		- accepts 3 lengths values and colour value. 5px x, 5px y, 0 blur radius, colour value i.e ‘0 1px 1px rgba(0,0,0,0.1);’
multiples 		- using multiple layers to create an entire text effect. 


Box shadow
————

box-shadow:		- cast shadows off of elements, same way text shadow works, horizontal, vertical, blur, colour. 
spread value		- 4th attribute that gives spread of shadow i.e “horizontal, vertical, blur, spread, colour”
inset 			- bring shadow inside element, must be declared either first of last. 


Border radius
————			

border-top-left-radius	- comprises of 4 separate values, one for each corner. Values can be length values or percentages. 
border-radius:		- shorthand just lists the 4 values same as clockwise padding / margin i.e ‘border-radius: 20px 10px 20px 10px;’ 


CSS gradients
————	

Give depth with gradual transitions between two or more colours. 

linear-gradient(#, #,)					- two colours by default top to bottom. change with ‘to left,’ i.e ‘linear-gradient(to left, #, #);’ Rotate with 0deg, 
radial-gradient(#, #,)					- Similar to liner gradient, change shape with keywords i.e ‘radial-gradient(circle, #, #)’ & position using ‘at’ i.e ‘…(circle at top, #, #);’
linear-gradient(#ffa949, transparent 90%),		- colour value and position value, stop gradients at specific points. just add more colours i.e. # 50%,# 10%,# 40%,  


Transparent Gradients and Multiple Backgrounds
————	

Use multiple background values by separating with a comma, first value listed is top layer rendered, last value is the very bottom. 

  background: linear-gradient(#ffa949, transparent 90%), // orange from top 
              linear-gradient(0deg,#fff, transparent), // bottom white 
              #ffa949 url('../img/mountains.jpg') no-repeat center; // background image at bottom


- Stacked up background using colour gradients and images. This is achieved by staking transparent backgrounds and using colour stops to set where gradients start and finish. 


Web Fonts with @font-face 
————	

Web fonts are special types of fonts that are optimized for screen display, and they're linked to our web pages from an external source, then activated when needed. Be aware of load time, only embed fonts that are needed. 

@font-face 	- Specifies web font and links to location
EOT		- Embedded Open Type, used for IE, IE 9 compatibility mode.   
WOFF		- Web Open Font Format, newer format by moz that is supported by newer browser, compressed so loads faster. 
TTF		- True Type Format, used for iOS, Safari, Android. 
letter-spacing	- Increase space between fonts.
font-weight	- Change font weight. 



Media Queries
————	

CSS Media Core has give us a convenient way of targeting different devices, resolutions, browser dimensions, and more. Media queries enhance browsing experience of websites on multiple devices or view ports because content can respond and adapt to the device that is displaying it. 



@media ()			- Specifies the media type that we want to target
@media all()			- All is default, if unspecified all devices will be applied. 
Media feature			- Way of defining what we target, we can check for width, height and max-width and height or device orientation. 
@media (max-width: 960px)	- will query max width of viewport. Can make changes to CSS when media query is applicable


The Cascade: Importance
————

The Cascade is what determines which styles are assigned to an element. Without the Cascade, CSS might as well stand for Conflicting Style Sheets.

Importance		- Depends on origin of the style sheet, User Agent Styles (browser default) or User styles or Author styles. Author has most importance.  
Specificity		- Most specific declaration over rides. Inline most specific, then ID then Class. 
Source order		- Then the source order is considered… last style gets applied because of the sources is newest. 



Inheritance
————

Inheritance in CSS means that an element’s style values are copied from its parent element. Inheritance allows us to keep styles consistent throughout a website without having to repeat them in our code.

initial			- displays property of the browsers initial value. 
inherit			- Child elements receive Parent elements properties. 







